{smcl}
{hline}
help for {cmd:dsconcat} {right:(SJ3-3: st0043; SJ4-3: st0043_1)}
{hline}

{title:Concatenate a list of Stata data files into the memory}

{p 8 27 2}
{cmd:dsconcat} {it:filename_list}  
[ {cmd:,} {cmdab:sub:set}{cmd:(}[{it:varlist}] [{cmd:if} {it:exp}] [{cmd:in} {it:range}]{cmd:)}
{cmdab:dsi:d}{cmd:(}{it:newvarname}{cmd:)} {cmdab:dsn:ame}{cmd:(}{it:newvarname}{cmd:)}
{cmdab:obs:seq}{cmd:(}{it:newvarname}{cmd:)}
{cmdab:nol:abel} {cmdab:nold:sid}
]

{p 4 8 2}
where {it:filename_list} is a list of filenames separated by spaces.
If any filename in the list is specified without an extension, then
{cmd:.dta} is assumed.


{title:Description}

{p 4 4 2}
{cmd:dsconcat} is a multiple-file version of {help use}. It takes, as input, a
list of filenames, assumed to belong to Stata data files, and creates a new
dataset in memory, containing a concatenation of the input data files.  The
new dataset contains all variables in all the input datasets (or a subset of
variables specified by the {cmd:subset()} option) and all observations in all
the input datasets (or a subset of observations specified by the {cmd:subset()}
option), ordered primarily by source dataset and secondarily by order of
observations within source dataset.  For any one variable in the output
dataset, values of the variable are set to missing in any observation from an
input dataset not containing that variable.  Optionally, {cmd:dsconcat}
creates new variables specifying, for each observation, the input file of
origin and the sequential order of the observation in its input file of
origin.


{title:Options}

{p 4 8 2}
{cmd:subset(}[{it:varlist}] [{cmd:if} {it:exp}] [{cmd:in} {it:range}]{cmd:)}
specifies a subset of variables or observations in each of the input
datasets to be included in the concatenated output dataset in memory.  The
value of the {cmd:subset()} option is a combination of a {help varlist}, 
an {help if} qualifier, or an {help in} qualifier.  Each of these is
optional; however, they must be valid for all input datasets, according to
the rules used by the {help use} command.

{p 4 8 2}
{cmd:dsid(}{it:newvarname}{cmd:)} specifies a new integer variable to be
created that contains, for each observation in the new dataset, the sequential
order in the {it:filename_list} of the input dataset of origin of the
observation. If {cmd:noldsid} is not specified, {cmd:dsconcat} creates a value
label for the {it:newvarname} with the same name, assigning, to each positive
integer {it:i} from 1 to the number of input file names in the list, a label
equal to the filename of the {it:i}th input dataset, truncated if necessary to
the maximum label length in the version of Stata being used (e.g., 80
characters for Small or Intercooled Stata 7).  If a value label of that name
already exists in one of the input datasets and {cmd:nolabel} is not
specified, {cmd:dsconcat} adds new labels but does not replace existing
labels.

{p 4 8 2}
{cmd:dsname(}{it:newvarname}{cmd:)} specifies a new string variable
containing, for each observation in the new dataset, the name of the input
dataset of origin of that observation, truncated if necessary to the maximum
string length in the version of Stata being used (e.g., 80 characters for Small
or Intercooled Stata 7 or 244 for {help specialedition:Stata 7 SE}).

{p 4 8 2}
{cmd:obsseq(}{it:newvarname}{cmd:)} specifies a new integer variable
containing, for each observation in the new dataset, the sequential order of
that observation in its input dataset of origin. If the {cmd:subset()} option
is specified, the sequential order of each observation is defined as its
sequential order amongst the subset of observations in the original dataset
specified by the {cmd:subset()} option, excluding observations in the original
dataset excluded by the {cmd:subset()} option.

{p 4 8 2}
{cmd:nolabel} prevents {cmd:dsconcat} from copying value label definitions
from the input datasets.

{p 4 8 2}
{cmd:noldsid} specifies that the new variable generated by the {cmd:dsid()}
option will have no value label. This implies that the values of the new
variable specified by the {cmd:dsid()} option will be listed as dataset
sequence numbers, not as dataset names.  This option is useful if the input
datasets are very numerous, are repeated, or are 
{help tempfile:temporary files} with uninformative names.  It is ignored if
the {cmd:dsid()} option is specified.


{title:Remarks}

{p 4 4 2}
{cmd:dsconcat} is a multifile version of {help use}. However, it is different
in that it overwrites existing datasets automatically (as {help collapse} and
{help contract} do), rather than requiring a {cmd:clear} option (as {help use}
does).


{title:Examples}

{p 8 16 2}{cmd:. dsconcat auto1 auto2 auto3 auto4,dsid(dsseq) obs(obsnum)}{p_end}
{p 8 16 2}{cmd:. sort dsseq obsnum}{p_end}

{p 8 16 2}{cmd:. dsconcat "Microsoft is inferior" Unix_is_superior IdontknowaboutMacOS}{p_end}

{p 4 4 2}
The following example creates a dataset containing variables {cmd:make},
{cmd:foreign}, {cmd:mpg}, and {cmd:weight} in the first 53 observations of
each of the datasets {cmd:auto1}, {cmd:auto2}, {cmd:auto3}, and {cmd:auto4},
with the input dataset name stored in the new string variable {cmd:dslab}:

{p 8 16 2}{cmd:. dsconcat auto1 auto2 auto3 auto4, subset(make foreign mpg weight in 1/53) dsn(dslab)}{p_end}


{title:Author}

{p 4 4 2}
Roger Newson, King's College London, UK.{break}
Email: {browse "mailto:roger.newson@kcl.ac.uk":roger.newson@kcl.ac.uk}


{title:Also see}

{p 4 13 2}
Manual:  {hi:[U] 25 Commands for combining data},{break}
{hi:[R] append}, {hi:[R] save}

{p 4 13 2}
Online:  help for {help append}, {help use}, {help save}{p_end}
